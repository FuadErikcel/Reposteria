/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.reposteria;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/**
 *
 * @author Bryan Aguiluz
 */
public class Consultas extends javax.swing.JFrame {

    /**
     * Creates new form Consultas
     */
    public Consultas() {
        initComponents();
        tabla(1, (String) CbxFiltroOrden.getSelectedItem(), obtenerLimiteSeleccionado());
    }
    Conexion conexionObjeto = new Conexion();
    Connection conexion = conexionObjeto.getConexion();
    
    private int obtenerLimiteSeleccionado() {
        String limiteSeleccionado = (String) CbxFiltroLimite.getSelectedItem();
        switch (limiteSeleccionado) {
            case "Todos":
                return -1; // Usar -1 para indicar que no hay límite
            case "1 Resultado":
                return 1;
            case "5 Resultados":
                return 5;
            case "15 Resultados":
                return 15;
            case "50 Resultados":
                return 50;
            default:
                return -1; // Valor predeterminado si no se encuentra ninguna coincidencia
        }
    }

    
    public void FiltroDias() throws SQLException{
        int dias = 1;
        String ordenSeleccionado = (String) CbxFiltroOrden.getSelectedItem();
        switch(CbxFiltroOrden.getSelectedIndex()) {
            case 0:
                dias = 1;
                break;
            case 1:
                dias = 5;
                break;
            case 2:
                dias = 15;
                break;
            case 3:
                dias = 30;
                break;
            default:
                break;
        }
        tabla(dias, ordenSeleccionado, obtenerLimiteSeleccionado());
    }

    
    public void tabla(int dias, String orden, int limiteResultados) {
        try {
            String consultaSQL = "SELECT idfactura, fechaventa " +
                                 "FROM factura WHERE fechaventa BETWEEN CURRENT_DATE - INTERVAL '" + dias + " days' AND CURRENT_DATE ";
                                 
            switch (orden) {
                case "Descendente":
                    consultaSQL += "ORDER BY fechaventa DESC ";
                    break;
                case "Ascendente":
                    consultaSQL += "ORDER BY fechaventa ASC ";
                    break;
                default:
                    break;
            }
            
            if (limiteResultados > 0) {
                consultaSQL += "LIMIT " + limiteResultados;
            }
            
            PreparedStatement statement = conexion.prepareStatement(consultaSQL);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel modeloTabla = new DefaultTableModel();
            modeloTabla.addColumn("ID Factura");
            modeloTabla.addColumn("Fecha Venta");

            while (resultSet.next()) {
                Object[] fila = {
                    resultSet.getString("idfactura"),
                    resultSet.getString("fechaventa"),
                };
                modeloTabla.addRow(fila);
            }

            Tabla.setModel(modeloTabla);

            statement.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al ejecutar consulta: " + ex.getMessage());
        }
    }

    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CbxFiltroOrden = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        CbxFiltroDias = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        CbxFiltroLimite = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 0, 18)); // NOI18N
        jLabel1.setText("Consulta Facturas");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 210, 30));

        CbxFiltroOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Descendente", "Ascendente" }));
        CbxFiltroOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxFiltroOrdenActionPerformed(evt);
            }
        });
        jPanel1.add(CbxFiltroOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 150, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Orden");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 150, -1));

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tabla);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 530, 320));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Filtrar por días");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 120, -1));

        CbxFiltroDias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hace 1 dia", "Hace 5 dias", "Hace 15 dias", "Hace 30 dias" }));
        CbxFiltroDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxFiltroDiasActionPerformed(evt);
            }
        });
        jPanel1.add(CbxFiltroDias, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 160, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Limite");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 100, -1));

        CbxFiltroLimite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "1 Resultado", "5 Resultado", "15 Resultados", "50 Resultados" }));
        CbxFiltroLimite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxFiltroLimiteActionPerformed(evt);
            }
        });
        jPanel1.add(CbxFiltroLimite, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 130, 140, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CbxFiltroOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxFiltroOrdenActionPerformed
        try {
        FiltroDias();
        } catch (SQLException ex) {
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

        int diasSeleccionados = 1; // Valor predeterminado
        switch(CbxFiltroDias.getSelectedIndex()) {
            case 0:
                diasSeleccionados = 1;
                break;
            case 1:
                diasSeleccionados = 5;
                break;
            case 2:
                diasSeleccionados = 15;
                break;
            case 3:
                diasSeleccionados = 30;
                break;
            default:
                break;
        }
    
        String ordenSeleccionado = (String) CbxFiltroOrden.getSelectedItem();
        tabla(diasSeleccionados, ordenSeleccionado, obtenerLimiteSeleccionado());
    }//GEN-LAST:event_CbxFiltroOrdenActionPerformed

    private void CbxFiltroDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxFiltroDiasActionPerformed
        try {
            FiltroDias();
        } catch (SQLException ex) {
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        }
        int diasSeleccionados = 1; // Valor predeterminado
        switch(CbxFiltroDias.getSelectedIndex()) {
            case 0:
                diasSeleccionados = 1;
                break;
            case 1:
                diasSeleccionados = 5;
                break;
            case 2:
                diasSeleccionados = 15;
                break;
            case 3:
                diasSeleccionados = 30;
                break;
            default:
                break;
        }
        String ordenSeleccionado = (String) CbxFiltroOrden.getSelectedItem();
        tabla(diasSeleccionados, ordenSeleccionado, obtenerLimiteSeleccionado());
    }//GEN-LAST:event_CbxFiltroDiasActionPerformed

    private void CbxFiltroLimiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxFiltroLimiteActionPerformed
        try {
            FiltroDias();
        } catch (SQLException ex) {
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int diasSeleccionados = 1; // Valor predeterminado
        
        switch(CbxFiltroDias.getSelectedIndex()) {
            case 0:
                diasSeleccionados = 1;
                break;
            case 1:
                diasSeleccionados = 5;
                break;
            case 2:
                diasSeleccionados = 15;
                break;
            case 3:
                diasSeleccionados = 30;
                break;
            default:
                break;
        }
        
        String ordenSeleccionado = (String) CbxFiltroOrden.getSelectedItem();
        tabla(diasSeleccionados, ordenSeleccionado, obtenerLimiteSeleccionado());
    
    }//GEN-LAST:event_CbxFiltroLimiteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consultas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbxFiltroDias;
    private javax.swing.JComboBox<String> CbxFiltroLimite;
    private javax.swing.JComboBox<String> CbxFiltroOrden;
    private javax.swing.JTable Tabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
